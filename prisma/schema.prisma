// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SHOP
}

model User {
  id        Int      @id @default(autoincrement())
  email String
  password String
  firstName String
  lastName String
  avatar String
  role Role @default(USER)
  products Product[]
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())
  name String
  icon String
  status Boolean @default(true)
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())
  name String
  longDescription String @db.Text
  shortDescription String
  quantity Int
  price Float @default(0)
  main_image String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  shop User? @relation(fields: [shopId], references: [id])
  shopId Int?

  productImages ProductImages[]
  productVariants ProductVariant[]

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt @default(now())
}

model ProductImages {
  id Int @id @default(autoincrement())
  image String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model ProductVariant {
  id Int @id @default(autoincrement())
  name String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  productVariantItems ProductVariantItem[]
}

model ProductVariantItem {
  id Int @id @default(autoincrement())
  name String
  productVariant ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId Int
}